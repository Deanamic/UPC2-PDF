HOW DOES THE FUZZ-TESTS WORK?

./fuzz.py runs all the tests in this directory. It does this by doing
the following:

- finding all .cpp files in this directory
- copying them to a temporary directory
- symlinking ../content to the same relative path in the temporary
  directory
- compling the test files
- running the produced executables NUM_TESTS times with one parameter
  going from 0 to NUM_TESTS-1

if any of these steps fails (compilation or a test has an exit status
!= 0) ./fuzz.py fails

HOW SHOULD THE TESTS BE STRUCTURED?

- the test should start with
  #define main XXX
  #include "../content/contest/template.cpp"
  #undef main
  to make sure, that the used template compiles with the header

- the test can use assert function to check specific conditions
- the test can use the numeric parameter to seed a PRNG to generate
  different cases, but stay reproducible

see PalindromeTree.cpp for an example